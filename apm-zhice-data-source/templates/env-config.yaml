apiVersion: v1
kind: ConfigMap
metadata: 
  name: {{ .Chart.Name }}-env-config
  namespace: {{ .Release.Namespace }}
data:
  env-config: |-
    var ENV_ACTION_CLEAN = {{ .Values.ENV_ACTION_CLEAN }}
    var ENV_ACTION_SKIP_CLEAN = {{ .Values.ENV_ACTION_SKIP_CLEAN }}

    var API_URL = (function() {
        var apiBaseUrl = '/api'; //node后台通用地址
        var bigDataUrl = '/lensData'; // 大数据后台通用地址
        var config = {
          BASIC: {
            DATA_SOURCE: { // 数据源文件列表
              url: '/data_source'
            },
            CREATE_TASK_SERVER: { // dataEtl/createTaskServer 创建清洗任务(点击“数据清洗按钮”)
              url: '/task'
            },
            POST_DATA_SET: { // 跑全量数据后，把数据outDataId 发给server端
              url: '/dataset'
            },
            GET_TEMPLATE_LIST: { //模板列表
              url: '/template'
            },
          },
          BIG_DATA: {
            PREV_DATA: { // 数据集预览
              url: '/lensData/getResultSet'
            },
            GET_FILE_ORIGIN_DATA: { // dataEtl/getFileOriginData 获取文件原始数据
              url: '/lensData/getRawData'
            },
        
            GET_FILE_DATA: { // dataEtl/getFileData
              url: '/lensDatayl/dealFormHeader'
            },
            START_TASK: {
              url: '/lensData/uploadNode'
            },
            UPLOAD_FILE: {// 上传文件
              url: '/lensDatayl/upload',
            }
          },
        };

        var joinUrl = function(prefix, data) {
          for(var i in data) {
            data[i].url = prefix + data[i].url;
          }
        }

        joinUrl(apiBaseUrl, config.BASIC);
        joinUrl(bigDataUrl, config.BIG_DATA);
        config.apiBaseUrl = apiBaseUrl;
        config.bigDataUrl = bigDataUrl;
        config.getBasicDataUrl = function(key) {
          return config.BASIC[key] && config.BASIC[key].url || '';
        };

        config.getBigDataUrl = function(key) {
          return config.BIG_DATA[key] && config.BIG_DATA[key].url || '';
        };

        return config;
      })();

    var APM_CONFIG = {
      alias: '{{ .Chart.Name }}', // 当前子模块别称
      messageOrigin: 'http://apm-zhice-system.192.168.1.244.xip.io', // apm壳子部署域名
      padding: {{ .Values.padding }} // apm壳子中iframe的偏移量 上 右 下 左 单位 px
    }

    var HIDE_BAR = {{ if .Values.global.hidebar }}{{ .Values.global.hidebar }}{{ else }}{{ .Values.hidebar}}{{ end }};

    // 写死的case_id
    CASE_ID = 817845123;

    