apiVersion: v1
kind: ConfigMap
metadata: 
  name: {{ .Chart.Name }}-env-config
  namespace: {{ .Release.Namespace }}
data:
  env-config: |-
        var ENV_OUTPUT_DATA_LIST = {{ .Values.ENV_OUTPUT_DATA_LIST }};
        var ENV_OUTPUT_DATA_DETAIL = {{ .Values.ENV_OUTPUT_DATA_DETAIL }};
        var ENV_OUTPUT_TEMPLATE_LIST = {{ .Values.ENV_OUTPUT_TEMPLATE_LIST }};
        var ENV_OUTPUT_TEMPLATE_DETAIL = {{ .Values.ENV_OUTPUT_TEMPLATE_DETAIL }};
        var ENV_ACTION_ADD = {{ .Values.ENV_ACTION_ADD }};
        var ENV_ACTION_IMPORTFLOWCHART = {{ .Values.ENV_ACTION_IMPORTFLOWCHART }};
        var ENV_ACTION_IMPORTVISUAL = {{ .Values.ENV_ACTION_IMPORTVISUAL }};
        var ENV_ACTION_IMPORTMAPVISUAL = {{ .Values.ENV_ACTION_IMPORTMAPVISUAL }};
        var ENV_ACTION_IMPORTLIST = {{ .Values.ENV_ACTION_IMPORTLIST }};
        var API_URL = (function(){
          var apiBaseUrl =  '/api';
          var bigDataUrl = '/lensData'
          var config = {
            BASIC: {
              DATA_SOURCE_LIST: {
                name: "数据文件列表",
                url: "/data_source"
              },
              TEMPLATE_LIST: {
                name: "模型列表",
                url: "/template"
              },
              TEMPLATE_DETAIL: {
                name: "模型详情",
                url: "/template"
              },
              // 输出
              OUTPUT_LIST: {
                name: "数据清洗结果列表",
                url: "/dataset"
              },
          
            },
            BIG_DATA: {
              DATA_SOURCE_DETAIL: {
                name: "数据文件详情",
                url: "/lensData/getRawData"
              },
              // 输出
              OUTPUT_DETAIL: {
                name: "数据清洗结果详情",
                url: "/lensData/getResultSet"
              }
            },
            ENV_DATASET_URL: '192.168.1.244:8888',
          };

          var joinUrl = function(prefix, data) {
            for(var i in data) {
              data[i].url = prefix + data[i].url;
            }
          }
          joinUrl(apiBaseUrl, config.BASIC);
          joinUrl(bigDataUrl, config.BIG_DATA);
          config.apiBaseUrl = apiBaseUrl;
          config.bigDataUrl = bigDataUrl;
          config.getBasicDataUrl = function(key) {
            return config.BASIC[key] && config.BASIC[key].url || '';
          };

          config.getBigDataUrl = function(key) {
            return config.BIG_DATA[key] && config.BIG_DATA[key].url || '';
          };

          return config;
        })();


        var APM_CONFIG = {
          alias: 'apm-zhice-data-clean', // 当前子模块别称
          messageOrigin: 'http://apm-zhice-system.192.168.1.244.xip.io', // apm壳子部署域名
          padding: {{ .Values.padding }} // apm壳子中iframe的偏移量 上 右 下 左 单位 px
        }

        var HIDE_BAR = {{ if .Values.global.hidebar }}{{ .Values.global.hidebar }}{{ else }}{{ .Values.hidebar}}{{ end }};

        // 写死的case_id
        window.CASE_ID = 238454784;     


    