apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-logstash-config
  namespace: {{ .Release.Namespace }}
data:
  testMultiline: |-
{{ .Values.testMultiline | indent 4 }}
  {{- if .Values.apm_logstashConfig }}
  apm_logstashConfig: |-
{{ .Values.apm_logstashConfig | indent 4 }}
  {{- else }}
  logstash-config: |-
    input {
      stdin { }
      jdbc {
        type => "node_index"

        jdbc_connection_string => "jdbc:mysql://apm-mysql-svc:3306/gongan?useSSL=false"

        jdbc_user => "root"

        jdbc_password => "pw123456"

        jdbc_driver_library => "./logstash/config/mysql-connector-java-5.1.47.jar"

        jdbc_driver_class => "com.mysql.jdbc.Driver"

        jdbc_paging_enabled => "true"

        jdbc_page_size => "5000"

        record_last_run => "true"

        use_column_value => "true"

        tracking_column_type => "timestamp"

        tracking_column => "update_time"

        clean_run => "false"

        last_run_metadata_path => "../logstash_jdbc_last_run_node_index"

        # statement => "select o.*,m.name as model_name from think_object o left join think_model m on o.model_id = m.id  where o.update_time>:sql_last_value  order by update_time ASC"

        # test
        statement => "select * from think_object"

        schedule => "* * * * *"
      }

    }

    filter {
      # json {
      #   source => "data"
      # }
    }

    output {
      if [type] == "node_index" {
        elasticsearch {
          hosts => "apm-elasticsearch-svc:9200"
          index => "node_index"
          document_type => "node"
          document_id => "%{id}"
        }
      }
    }
  {{- end }}